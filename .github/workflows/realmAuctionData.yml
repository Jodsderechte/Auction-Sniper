name: Blizzard Data Gathering

on:
  schedule:
    - cron: '0 8-22 * * *' 
  workflow_dispatch:

jobs:
  gather:
    runs-on: ubuntu-latest
    env:
      BLIZZARD_CLIENT_ID: ${{ secrets.BLIZZARD_CLIENT_ID }}
      BLIZZARD_CLIENT_SECRET: ${{ secrets.BLIZZARD_CLIENT_SECRET }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests

      - name: Run data gathering script
        run: python auctionDataRequest.py

      - name: Restore SQLite database cache
        uses: actions/cache@v3
        with:
          path: auctions.db
          key: auctions-db-cache
          restore-keys: |
            auctions-db-cache
        continue-on-error: true
      - name: Run auction sniper script
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python sniper.py
      - name: Save updated SQLite database to cache
        uses: actions/cache@v3
        with:
          path: auctions.db
          key: auctions-db-cache
      - name: Commit and push changes
        run: |
          set -e  # Exit script on any command failure
      
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config pull.rebase true  # Rebase
      
          git add data/
          
          # Commit only if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Updated Auction data"
          fi
      
          # Pull latest changes, fail only on actual errors
          if ! git pull --rebase; then
            echo "Error during git pull" >&2
            exit 1
          fi
      
          # Push changes, fail if there's an actual error
          if ! git push; then
            echo "Error during git push" >&2
            exit 1
          fi

      - name: Run data gathering script
        run: python processAuctionsRequest.py

      - name: Commit and push changes
        run: |
          set -e  # Exit script on any command failure
      
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config pull.rebase true  # Rebase
      
          git add data/
          
          # Commit only if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Updated Items data from Auctions"
          fi
      
          # Pull latest changes, fail only on actual errors
          if ! git pull --rebase; then
            echo "Error during git pull" >&2
            exit 1
          fi
      
          # Push changes, fail if there's an actual error
          if ! git push; then
            echo "Error during git push" >&2
            exit 1
          fi
